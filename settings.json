{
    // C/C++
    //"C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, ColumnLimit: 0, Standard: Cpp11, BreakBeforeBraces: Allman, IndentWidth: 4, IndentPPDirectives: AfterHash, AccessModifierOffset: -4, AlignAfterOpenBracket: Align, AlignConsecutiveDeclarations: false, AlignConsecutiveMacros: true, AlignEscapedNewlines: Left, AlignOperands: true, AlignTrailingComments: true, AllowAllArgumentsOnNextLine: false, AllowAllConstructorInitializersOnNextLine: false, AllowAllParametersOfDeclarationOnNextLine: true, AllowShortBlocksOnASingleLine: false, AllowShortCaseLabelsOnASingleLine: false, AllowShortFunctionsOnASingleLine: None, AllowShortIfStatementsOnASingleLine: true, AllowShortLoopsOnASingleLine: false, AlwaysBreakAfterDefinitionReturnType: None, AlwaysBreakAfterReturnType: None, AlwaysBreakBeforeMultilineStrings: false, AlwaysBreakTemplateDeclarations: true, BinPackArguments: false, BinPackParameters: false, BraceWrapping: { AfterEnum: true, AfterStruct: true, AfterClass: true, SplitEmptyFunction: true, AfterControlStatement: false, AfterNamespace: false, AfterFunction: true, AfterUnion: true, AfterExternBlock: false, BeforeCatch: false, BeforeElse: false, SplitEmptyRecord: true, SplitEmptyNamespace: true } }",
    // "C_Cpp.dimInactiveRegions": true,
    // "clang-format.executable": "${workspaceRoot}/.clang-format",
    "[c]": {
        "editor.rulers": [
            80
        ]
    },
    "[cpp]": {
        "editor.rulers": [
            80
        ]
    },
    // Python
    // ------------------------------------------------------------------------
    // [-] pip install django black isort pylint pylint-django mypy django-stubs
    // "black-formatter.args": [
    //     "--line-length",
    //     "79"
    // ],
    // "pylint.importStrategy": "fromEnvironment",
    // "pylint.lintOnChange": false,
    // "pylint.args": [
    //     "--load-plugins",
    //     "pylint_django",
    //     "--max-line-length=79",
    //     "--disable=C0114,C0209,C0411,C0415,C0302,W0105,W0511,W0613,W0718,W5103"
    // ],
    // "python.formatting.provider": "ruff",
    // "[python]": {
    //     "editor.defaultFormatter": "ms-python.black-formatter",
    //     //"editor.defaultFormatter": "ms-python.autopep8",
    //     "editor.formatOnSave": true,
    //     "editor.codeActionsOnSave": {
    //         "source.organizeImports": "explicit"
    //     },
    // },
    // ------------------------------------------------------------------------
    // pip install ruff isort mypy pylint pylint-django pylint-celery django-stubs
    "pylint.importStrategy": "fromEnvironment",
    "pylint.lintOnChange": false,
    "pylint.args": [
        "--load-plugins=pylint_django,pylint_celery",
        "--django-settings-module=basic.settings",
        "--max-line-length=79",
        "--disable=C0103,C0114,C0115,C0209,C0411,C0415,C0302,W0105,W0511,W0613,W0718,W5103"
    ],
    "python.analysis.extraPaths": [
        "./",
        "./src/",
        "./src/apps/"
    ],
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.fixAll": "explicit",
            "source.organizeImports": "explicit"
        }
    },
    "ruff.organizeImports": false,
    "isort.args": [
        "--profile",
        "black"
    ],
    "mypy-type-checker.path": [
        "${workspaceFolder}/.venv/bin/mypy"
    ],
    "mypy-type-checker.args": [
        "--config-file=.mypy.ini"
    ],
    // DjLint
    // Doc: https://www.djlint.com/docs/configuration/
    // djLint plugin for VSCode, and pip install djlint
    "djlint.ignore": [
        "H021"
    ],
    "djlint.blankLineAfterTag": [
        "load,extends,include"
    ],
    "djlint.blankLineBeforeTag": [
        "load,extends,include"
    ],
    "djlint.formatAttributeTemplateTags": true,
    "djlint.formatCss": true,
    "djlint.formatJs": true,
    "djlint.closeVoidTags": true,
    "djlint.maxBlankLines": 4,
    "djlint.maxLineLength": 120,
    "djlint.profile": "django",
    "djlint.indentJs": 2,
    "djlint.indentCss": 2,
    "djlint.lineBreakAfterMultilineTag": false,
    "djlint.preserveBlankLines": true,
    // YAML
    "[yaml]": {
        "editor.tabSize": 2,
        "editor.insertSpaces": true,
        "editor.detectIndentation": false,
        "editor.rulers": [
            0
        ]
    },
    // TypeScript
    "[typescript]": {
        "editor.tabSize": 2,
        "editor.rulers": [
            80
        ]
    },
    // JavaScript
    "[javascript]": {
        "editor.tabSize": 2,
        "editor.rulers": [
            80
        ],
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    // GoLang
    "go.lintOnSave": "file",
    "go.formatTool": "goimports",
    "go.useLanguageServer": true,
    "[go]": {
        "editor.insertSpaces": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        },
        "editor.rulers": [
            80,
            81
        ]
    },
    "go.toolsEnvVars": {
        "GO11MODULE": "on"
    },
    "go.lintTool": "golint",
    "[json]": {
        "editor.rulers": [
            0
        ]
    },
    // Markdown
    "[markdown]": {
        "editor.wordWrap": "bounded",
        "editor.wordWrapColumn": 120,
        "editor.rulers": [
            79,
            120
        ]
    },
    // HTML
    "html.autoClosingTags": false,
    "html.format.wrapAttributes": "preserve-aligned",
    "html.format.enable": false,
    "html.format.wrapLineLength": 100,
    "[html]": {
        "editor.rulers": [
            80,
            120,
            121
        ],
        "editor.defaultFormatter": "monosans.djlint",
        "editor.tabSize": 2
    },
    // Django-HTML
    "[django-html]": {
        // Stop prettier from formatting HTML.
        "editor.defaultFormatter": "monosans.djlint",
        "editor.detectIndentation": false,
        "editor.rulers": [
            80,
            120,
            121
        ],
        "editor.tabSize": 2
    },
    // SQL
    "[sql]": {
        "editor.rulers": [
            0
        ]
    },
    // CSS/SCSS
    "[css]": {
        "editor.rulers": [
            80,
            120
        ],
        "editor.tabSize": 2,
    },
    "[scss]": {
        "editor.rulers": [
            80,
            120
        ],
        "editor.tabSize": 2
    },
    // MictoPico
    "micropico.autoConnect": false,
    "micropico.manualComDevice": "/dev/ttyACM0",
    // Smart-tab
    "smart-tabs.activeFirst": true,
    "smart-tabs.fixedTabs": 3,
    "smart-tabs.debounceDelay": 300,
    "smart-tabs.reactionEvent": "onedit",
    // cSpell
    "cSpell.language": "en,uk",
    "cSpell.diagnosticLevel": "Hint",
    "cSpell.userWords": [
        "akram",
        "autopep",
        "autopk",
        "EXXX",
        "goimports",
        "golint",
        "ipynb",
        "isort",
        "itercompat",
        "modeltranslation",
        "mohd",
        "Monokai",
        "mypy",
        "onedit",
        "prec",
        "pylint",
        "subclasscheck",
        "venv",
        "WXXX"
    ],
    // Security
    "security.workspace.trust.untrustedFiles": "open",
    // Editor
    // "window.zoomLevel": 0.3,
    "window.zoomLevel": 0.3,
    "files.restoreUndoStack": false,
    "files.exclude": {
        "**/.git": true,
        //"**/.vscode": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/.DS_Store": true,
        "**/.archive.*": true,
        "**/.del.*": true
    },
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit"
    },
    "editor.tabSize": 4,
    "editor.fontSize": 15,
    "editor.lineHeight": 1.2,
    "editor.rulers": [
        0,
        79
    ],
    "editor.formatOnSave": true,
    "editor.acceptSuggestionOnCommitCharacter": false,
    "editor.autoClosingBrackets": "never",
    "editor.autoClosingQuotes": "never",
    "editor.autoSurround": "never",
    "editor.detectIndentation": false,
    "editor.formatOnPaste": true,
    "editor.smoothScrolling": true,
    "editor.cursorBlinking": "phase",
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.minimap.enabled": false,
    "editor.inlineSuggest.enabled": true,
    "editor.guides.indentation": false,
    "editor.tokenColorCustomizations": {
        "[Default Dark+]": {
            "textMateRules": [
                {
                    "scope": "markup.heading.python.cell.splitter",
                    "settings": {
                        "fontStyle": "bold",
                        "foreground": "#40b903"
                    }
                }
            ]
        }
    },
    "editor.semanticHighlighting.enabled": true,
    "editor.quickSuggestions": {
        "comments": "off",
        "other": "off",
        "strings": "off"
    },
    "editor.quickSuggestionsDelay": 10000,
    "editor.suggestOnTriggerCharacters": false,
    "editor.suggestSelection": "first",
    "editor.hover.enabled": false,
    "editor.insertSpaces": true,
    "editor.hideCursorInOverviewRuler": true,
    // Terminal
    "terminal.integrated.fontSize": 14,
    "terminal.integrated.fontFamily": "monospace",
    // Workbench
    "workbench.startupEditor": "none",
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "workbench.colorCustomizations": {
        "editorRuler.foreground": "#313742", // "#495364", //"#40c3ff",
        "editor.lineHighlightBackground": "#32353dff",
        "editor.lineHighlightBorder": "#00000000",
        "editorHint.foreground": "#ff000000",
        "editorHint.border": "#00ff66"
    },
    "workbench.tree.indent": 22,
    "workbench.editor.enablePreview": false,
    "workbench.list.smoothScrolling": true,
    "workbench.editor.wrapTabs": false,
    "workbench.sideBar.location": "right",
    "workbench.editor.openPositioning": "last",
    "workbench.iconTheme": "atom-icons",
    "workbench.colorTheme": "One Monokai",
    "git.openRepositoryInParentFolders": "never",
    "remote.autoForwardPortsSource": "hybrid",
}
